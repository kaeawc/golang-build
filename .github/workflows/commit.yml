name: "Commit"

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  checks: write
  packages:	write

jobs:
  compile-binary:
    runs-on: ubuntu-latest

    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Compile Go binary"
        run: go build cmd/server/main.go

  build-image:
    runs-on: ubuntu-latest
    needs:
      - compile-binary
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Log in to GitHub Docker registry"
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: "Build Docker image"
        run: docker build -f ci/Dockerfile -t ghcr.io/${{ github.repository_owner }}/golang-build:latest .

      - name: "Push Docker image"
        run: docker push ghcr.io/${{ github.repository_owner }}/golang-build:latest

  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Install gotestsum"
        run: |
          go install gotest.tools/gotestsum@latest

      - name: "Run Go tests"
        run: |
          gotestsum --junitfile junit-report.xml --format standard-verbose -- -exec=true -toolexec=$PWD/ci/go-compile-without-link.sh -vet=off ./...

      - name: "Check if test reports were created"
        id: junit-reports-exist
        uses: andstor/file-existence-action@v2
        with:
          files: "junit-report.xml"

      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v4
        if: steps.junit-reports-exist.outputs.files_exists == 'true'
        with:
          report_paths: 'junit-report.xml'

  complexity:
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Install gocyclo"
        run: |
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest

      - name: "Run gocyclo"
        run: |
          gocyclo -over 10 .

  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Install golangci-lint"
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: "Run golangci-lint"
        run: |
          golangci-lint run

  check-licenses:
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Install go-licenses"
        run: |
          go install github.com/google/go-licenses@latest

      - name: "Run go-licenses"
        run: |
          go-licenses report ./...

  security:
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: "Install gosec"
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: "Run gosec"
        run: |
          gosec -fmt=junit-xml -out=gosec-report.xml ./...

      - name: "Check if security report was created"
        id: gosec-report-exists
        uses: andstor/file-existence-action@v2
        with:
          files: "gosec-report.xml"

      - name: "Publish Security Report"
        uses: mikepenz/action-junit-report@v4
        if: steps.gosec-report-exists.outputs.files_exists == 'true'
        with:
          report_paths: 'gosec-report.xml'
